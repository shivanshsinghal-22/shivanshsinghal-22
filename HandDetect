import cv2
import time
import mediapipe as mp

class DetectHands():

    def __init__(self,static_image_mode=False,max_num_hands=2,model_complexity=1,min_detection_confidence=0.5,min_tracking_confidence=0.5):

        self.mode=static_image_mode
        self.max_num_hands=max_num_hands
        self.model_complexity=model_complexity
        self.min_detection_confidence=min_detection_confidence
        self.min_tracking_confidence=min_tracking_confidence

        self.mpHands = mp.solutions.hands
        self.hands = self.mpHands.Hands(self.mode,self.max_num_hands,self.model_complexity,self.min_detection_confidence,self.min_tracking_confidence)
        self.mpDraw = mp.solutions.drawing_utils

    def displayhands(self,img):

        imgRGB = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
        self.results = self.hands.process(imgRGB)
        
        if self.results.multi_hand_landmarks:
            for handLms in self.results.multi_hand_landmarks:
                self.mpDraw.draw_landmarks(img, handLms , self.mpHands.HAND_CONNECTIONS)

    def getLandMark(self,img,handNumber,id):

        imgRGB = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
        self.results = self.hands.process(imgRGB)
        h,w,c = img.shape
        landmark_list=[]

        if self.results.multi_hand_landmarks:
            myHand = self.results.multi_hand_landmarks[handNumber]
            self.mpDraw.draw_landmarks(img, myHand , self.mpHands.HAND_CONNECTIONS)

            for Ids in id:
                lands = myHand.landmark[Ids]
                c = int(lands.x*w), int(lands.y*h) , int(lands.z) 
                landmark_list.append(c)

        return landmark_list

    def main(self):
        cam = cv2.VideoCapture(0)

        pTime = 0
        cTime = 0

        while True:

            success , img = cam.read()

            find = [4]
            landmarks = self.getLandMark(img,0,find)
            print(landmarks)
    
            cTime=time.time()
            fps = 1/(cTime-pTime)
            pTime = cTime

            cv2.putText(img,str(int(fps)),(10,70),cv2.FONT_HERSHEY_PLAIN, 3, (255, 0,255),3)
            cv2.imshow("Result",img)
            cv2.waitKey(1)

if __name__=="__main__":
    detector = DetectHands()
    detector.main()

        
        
        

